<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: shell | Allison Kaptur]]></title>
  <link href="http://akaptur.github.com/blog/categories/shell/atom.xml" rel="self"/>
  <link href="http://akaptur.github.com/"/>
  <updated>2014-10-19T17:59:49-04:00</updated>
  <id>http://akaptur.github.com/</id>
  <author>
    <name><![CDATA[akaptur]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Some wacky shell scripting]]></title>
    <link href="http://akaptur.github.com/blog/2012/12/23/some-wacky-shell-scripting/"/>
    <updated>2012-12-23T16:16:00-05:00</updated>
    <id>http://akaptur.github.com/blog/2012/12/23/some-wacky-shell-scripting</id>
    <content type="html"><![CDATA[<p>I&rsquo;m currently digging into the source of virtualenv, a python utility for managing environments.  It&rsquo;s incredibly handy, and I&rsquo;d been using it for a while without really understanding how it worked.  I&rsquo;ll have more later on the details, but in the meantime, I hit a particularly puzzling bit of code:
```
if [ -z &ldquo;$VIRTUAL_ENV_DISABLE_PROMPT&rdquo; ] ; then</p>

<pre><code>_OLD_VIRTUAL_PS1="$PS1"
if [ "x" != x ] ; then
    PS1="$PS1"
else
if [ "`basename \"$VIRTUAL_ENV\"`" = "__" ] ; then
    # special case for Aspen magic directories
    # see http://www.zetadev.com/software/aspen/
    PS1="[`basename \`dirname \"$VIRTUAL_ENV\"\``] $PS1"
else
    PS1="(`basename \"$VIRTUAL_ENV\"`)$PS1"
fi
fi
export PS1
</code></pre>

<p>fi
<code>
This is largely intelligible - clearly we're modifying the $PS1 variable, which sets the bash prompt.  But what on earth is this line?
</code></p>

<pre><code>if [ "x" != x ] ; then
    PS1="$PS1"
</code></pre>

<p><code>``
</code>x<code>is not a variable defined elsewhere in the script, and bash will interpret both</code>&ldquo;x&rdquo;<code>and</code>x` as string literals anyway.  Is there some bizarre shell in which this test can possibly return true?</p>

<p>As it turns out, there isn&rsquo;t.  The reason this code looks so bizarre is that it&rsquo;s automatically generated by virtualenv.  The original line of code is <a href="https://github.com/pypa/virtualenv/blob/develop/virtualenv_embedded/activate.sh#L59">this</a>:
```</p>

<pre><code>if [ "x__VIRTUAL_PROMPT__" != x ] ; then
    PS1="__VIRTUAL_PROMPT__$PS1"
</code></pre>

<p><code>
And then elsewhere we find its [complement](https://github.com/pypa/virtualenv/blob/develop/virtualenv.py#L1582):
</code></p>

<pre><code>    content = content.replace('__VIRTUAL_PROMPT__', prompt or '')
</code></pre>

<p>```
Together, this code is entirely reasonable.</p>

<p>Thanks to user ruakh on <a href="http://stackoverflow.com/questions/13976472/what-does-if-x-x-do-in-bash">Stack Overflow</a> for the key insight here.</p>
]]></content>
  </entry>
  
</feed>
